#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e

BUILD_DIR=$1
CACHE_DIR=$2
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

GETTEXT_TAR="http://ftp.gnu.org/pub/gnu/gettext/gettext-0.19.8.1.tar.gz"
GETTEXT_CACHE=$CACHE_DIR/.gettext

PATH=$GETTEXT_CACHE/bin:$PATH
LD_LIBRARY_PATH=$GETTEXT_CACHE/lib:$LD_LIBRARY_PATH

# Output helpers
source $BIN_DIR/utils

# Prepare the various paths
mkdir -p $GETTEXT_CACHE

if [ ! `which msgfmt` ]; then
    build-step "compiling gettext"

    build-info "downloading"
    d=$(mktemp -dt XXXX)
    curl -s "$GETTEXT_TAR" -o "$d"/pkg.tar.gz

    build-info "unpacking and installing"
    cd $d
    tar -xf pkg.tar.gz
    cd gettext-0.19.8.1

    build-info "configure"
    ./configure --prefix=$GETTEXT_CACHE --with-included-libunistring > /tmp/gettext_conf 2>&1

    build-info "make"
    make > /tmp/gettext_make 2>&1

    build-info "make install"
    make install > /tmp/gettext_makeinstall 2>&1
fi

build-step "cleanup"

# Check for an essential binary to make sure it's installed
if [ ! `which msgfmt` ]; then
    build-warn "Gettext installation failed"
    exit 1
fi

build-step "run msgfmt"
find $BUILD_DIR -name \*.po -execdir msgfmt django.po -o django.mo \;
