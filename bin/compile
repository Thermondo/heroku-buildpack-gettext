#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e

BUILD_DIR=$1
CACHE_DIR=$2
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

GETTEXT_TAR="http://ftp.gnu.org/pub/gnu/gettext/gettext-0.18.3.1.tar.gz"
GETTEXT_HOME=$BUILD_DIR/.gettext
GETTEXT_CACHE=$CACHE_DIR/.gettext

PATH=$GETTEXT_HOME/bin:$PATH
LD_LIBRARY_PATH=$GETTEXT_HOME/lib:$LD_LIBRARY_PATH

# Output helpers
source $BIN_DIR/utils

# Prepare the various paths
mkdir -p $GETTEXT_HOME
mkdir -p $GETTEXT_CACHE

if [ "$(ls -A $GETTEXT_CACHE)" ]; then
    cp -R $GETTEXT_CACHE/* $GETTEXT_HOME
fi

if [ ! `which msgfmt` ]; then
    build-step "compiling gettext"

    build-info "downloading"
    d=$(mktemp -dt XXXX)
    curl -s "$GETTEXT_TAR" -o "$d"/pkg.tar.gz

    build-info "unpacking and installing"
    cd $d
    tar -xf pkg.tar.gz
    cd gettext-0.18.3.1

    build-info "configure"
    ./configure --prefix=$GETTEXT_HOME --with-included-libunistring > /tmp/gettext_conf 2>&1

    build-info "make"
    make > /tmp/gettext_make 2>&1

    build-info "make install"
    make install > /tmp/gettext_makeinstall 2>&1
fi

build-step "cleanup"
# Make sure the cache is empty
rm -rf $GETTEXT_CACHE/*

# Store a copy of it in the cache so it doesn't have to be fetched again
cp -R $GETTEXT_HOME/* $GETTEXT_CACHE/

# Check for an essential binary to make sure it's installed
if [ ! `which msgfmt` ]; then
    build-warn "Gettext installation failed"
    exit 1
fi

mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/gettext.sh
export PATH=$HOME/.gettext/bin:$PATH
export LD_LIBRARY_PATH=$HOME/.gettext/lib:$LD_LIBRARY_PATH
EOF
